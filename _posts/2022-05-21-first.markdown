---
layour: post
title: 关于jekyll的博客内容 
---

# 头信息
头信息是包含在两行三虚线之间的内容，必须放置于文件开头，在头信息中，你可以给预设值的变量赋值，也可以定义自己的变量，方便之后使用
```xml
---
post: post
title: 这是用来掩饰头信息的
---
```

这里有几个预定义好的全局变量
|变量名称|描述|
|---|---|
|layout|如果设置的话，会指定使用该模板文件。指定模板文件时候不需要文件扩展名。模板文件必须放在 _layouts 目录下。|
|permalink|如果你需要让你发布的博客的 URL 地址不同于默认值 /year/month/day/title.html，那你就设置这个变量，然后变量值就会作为最终的 URL 地址。|
|published|如果你不想在站点生成后展示某篇特定的博文，那么就设置（该博文的）该变量为 false。|

  
如何使用自定义变量呢？比如我们要在页面中使用定义的```title```变量
```html
<!DOCTYPE HTML>
<html>
  <head>
    <title>{{ page.title }}</title>
  </head>
  <body>
    ...
```

还有一些变量，即便你没有定义，你也可以使用在文章中
|变量名称|描述|
|---|---|
|date|这里的日期会覆盖文章名字中的日期。这样就可以用来保障文章排序的正确。日期的具体格式为YYYY-MM-DD HH:MM:SS +/-TTTT；时，分，秒和时区都是可选的。|
|category、categories|除过将博客文章放在某个文件夹下面外，你还可以指定博客的一个或者多个分类属性。这样当你的站点生成后，这些文章就可以根据这些分类来阅读。categories 可以通过 YAML list，或者以逗号隔开的字符串指定。|
|tags|类似分类 categories，一篇文章也可以给它增加一个或者多个标签。同样，tags 可以通过 YAML 列表或者以逗号隔开的字符串指定。|

# 撰写博客

## 文章文件夹
文章需要放在```_post```文件夹中，支持```markdown```和```texttile```格式，只要文件中有```yaml```头信息，它们就会被转化为html文件  
文件名称需要遵循以下格式：
```
//年-四位数字
//月-两位数字
//日-两位数字
//markup-扩展名

年-月-日-标题.markup
```

## 引用图片和其它资源
通常的做法是，在工程的根目录下面建立一个```assets```文件夹，然后在页面中按如下方式使用：

```
… 从下面的截图可以看到：
![有帮助的截图]({{ site.url }}/assets/screenshot.jpg)

… 你可以直接 [下载 PDF]({{ site.url }}/assets/mydoc.pdf).
```


## 文章目录

```html
<ul>
  {% for post in site.posts %}
    <li>
      <a href="{{ post.url }}">{{ post.title }}</a>
    </li>
  {% endfor %}
</ul>
```

## 文章摘要

Jekyll 会自动取每篇文章从开头到第一次出现 excerpt_separator 的地方作为文章的摘要，并将此内容保存到变量 post.excerpt 中。

```html
<ul>
  {% for post in site.posts %}
    <li>
      <a href="{{ post.url }}">{{ post.title }}</a>
      <p>{{ post.excerpt }}</p>
    </li>
  {% endfor %}
</ul>
```

## 高亮代码
linenos用来控制行号显示
```
{% highlight ruby linenos %}
def show
  @widget = Widget(params[:id])
  respond_to do |format|
    format.html # show.html.erb
    format.json { render json: @widget }
  end
end
{% endhighlight %}
```


# 使用草稿

# 创建页面

# 静态文件

# 常用变量

# 集合

# 数据文件

# 资源

# 博客迁移

